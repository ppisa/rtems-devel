#!/bin.sh

# `configure' configures this package to adapt to many kinds of systems.
# 
# Usage: configure [OPTION]... [VAR=VALUE]...
# 
# To assign environment variables (e.g., CC, CFLAGS...), specify them as
# VAR=VALUE.  See below for descriptions of some of the useful variables.
# 
# Defaults for the options are specified in brackets.
# 
# Configuration:
#   -h, --help              display this help and exit
#       --help=short        display options specific to this package
#       --help=recursive    display the short help of all the included packages
#   -V, --version           display version information and exit
#   -q, --quiet, --silent   do not print `checking ...' messages
#       --cache-file=FILE   cache test results in FILE [disabled]
#   -C, --config-cache      alias for `--cache-file=config.cache'
#   -n, --no-create         do not create output files
#       --srcdir=DIR        find the sources in DIR [configure dir or `..']
# 
# Installation directories:
#   --prefix=PREFIX         install architecture-independent files in PREFIX
#                           [/usr/local]
#   --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
#                           [PREFIX]
# 
# By default, `make install' will install all the files in
# `/usr/local/bin', `/usr/local/lib' etc.  You can specify
# an installation prefix other than `/usr/local' using `--prefix',
# for instance `--prefix=$HOME'.
# 
# For better control, use the options below.
# 
# Fine tuning of the installation directories:
#   --bindir=DIR            user executables [EPREFIX/bin]
#   --sbindir=DIR           system admin executables [EPREFIX/sbin]
#   --libexecdir=DIR        program executables [EPREFIX/libexec]
#   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
#   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
#   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
#   --libdir=DIR            object code libraries [EPREFIX/lib]
#   --includedir=DIR        C header files [PREFIX/include]
#   --oldincludedir=DIR     C header files for non-gcc [/usr/include]
#   --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
#   --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
#   --infodir=DIR           info documentation [DATAROOTDIR/info]
#   --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
#   --mandir=DIR            man documentation [DATAROOTDIR/man]
#   --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]
#   --htmldir=DIR           html documentation [DOCDIR]
#   --dvidir=DIR            dvi documentation [DOCDIR]
#   --pdfdir=DIR            pdf documentation [DOCDIR]
#   --psdir=DIR             ps documentation [DOCDIR]
# 
# Program names:
#   --program-prefix=PREFIX            prepend PREFIX to installed program names
#   --program-suffix=SUFFIX            append SUFFIX to installed program names
#   --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
# 
# X features:
#   --x-includes=DIR    X include files are in DIR
#   --x-libraries=DIR   X library files are in DIR
# 
# System types:
#   --build=BUILD     configure for building on BUILD [guessed]
#   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
#   --target=TARGET   configure for building compilers for TARGET [HOST]
# 
# Optional Features:
#   --disable-option-checking  ignore unrecognized --enable/--with options
#   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
#   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
#   --enable-maintainer-mode
#                           enable make rules and dependencies not useful (and
#                           sometimes confusing) to the casual installer
#   --enable-plugins        Enable support for plugins
#   --disable-largefile     omit support for large files
#   --enable-shared[=PKGS]  build shared libraries [default=yes]
#   --enable-static[=PKGS]  build static libraries [default=yes]
#   --enable-fast-install[=PKGS]
#                           optimize for fast installation [default=yes]
#   --disable-libtool-lock  avoid locking (might break parallel builds)
#   --enable-targets=TARGETS
#                           alternative target configurations
#   --enable-64-bit-bfd     64-bit support (on hosts with narrower word sizes)
#   --disable-gdbmi         disable machine-interface (MI)
#   --enable-tui            enable full-screen terminal user interface (TUI)
#   --enable-gdbtk          enable gdbtk graphical user interface (GUI)
#   --enable-profiling      enable profiling of GDB
#   --enable-codesign=CERT  sign gdb with 'codesign -s CERT'
#   --disable-rpath         do not hardcode runtime library paths
#   --enable-source-highlight
#                           enable source-highlight for source listings
#   --enable-threading      include support for parallel processing of data
#                           (yes/no)
#   --enable-werror         treat compile warnings as errors
#   --enable-build-warnings enable build-time compiler warnings if gcc is used
#   --enable-gdb-build-warnings
#                           enable GDB specific build-time compiler warnings if
#                           gcc is used
#   --enable-ubsan          enable undefined behavior sanitizer (auto/yes/no)
#   --enable-sim            link gdb with simulator
#   --enable-libbacktrace   use libbacktrace to write a backtrace after a fatal
#                           signal.
#   --enable-libctf         Handle .ctf type-info sections [default=yes]
#   --enable-unit-tests     Enable the inclusion of unit tests when compiling
#                           GDB
# 
# Optional Packages:
#   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
#   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
#   --with-pic              try to use only PIC/non-PIC objects [default=use
#                           both]
#   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
#   --with-separate-debug-dir=PATH
#                           look for global separate debug info in this path
#                           [LIBDIR/debug]
#   --with-gdb-datadir=PATH look for global separate data files in this path
#                           [DATADIR/gdb]
#   --with-relocated-sources=PATH
#                           automatically relocate this path for source files
#   --with-auto-load-dir=PATH
#                           directories from which to load auto-loaded scripts
#                           [$debugdir:$datadir/auto-load]
#   --with-auto-load-safe-path=PATH
#                           directories safe to hold auto-loaded files
#                           [--with-auto-load-dir]
#   --without-auto-load-safe-path
#                           do not restrict auto-loaded files locations
#   --with-debuginfod       Enable debuginfo lookups with debuginfod
#                           (auto/yes/no)
#   --with-libunwind-ia64   use libunwind frame unwinding for ia64 targets
#   --with-curses           use the curses library instead of the termcap
#                           library
#   --with-pkgversion=PKG   Use PKG in the version string in place of "GDB"
#   --with-bugurl=URL       Direct users to URL to report a bug
#   --with-system-zlib      use installed libz
#   --with-zstd             support zstd compressed debug sections
#                           (default=auto)
#   --with-gnu-ld           assume the C compiler uses GNU ld default=no
#   --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
#   --without-libiconv-prefix     don't search for libiconv in includedir and libdir
#   --with-libiconv-type=TYPE     type of library to search for (auto/static/shared)
#   --with-iconv-bin=PATH   specify where to find the iconv program
#   --with-system-readline  use installed readline library
#   --with-jit-reader-dir=PATH
#                           directory to load the JIT readers from
#   --with-expat            include expat support (auto/yes/no)
#   --with-libexpat-prefix[=DIR]  search for libexpat in DIR/include and DIR/lib
#   --without-libexpat-prefix     don't search for libexpat in includedir and libdir
#   --with-libexpat-type=TYPE     type of library to search for (auto/static/shared)
#   --with-libgmp-prefix[=DIR]  search for libgmp in DIR/include and DIR/lib
#   --without-libgmp-prefix     don't search for libgmp in includedir and libdir
#   --with-libgmp-type=TYPE     type of library to search for (auto/static/shared)
#   --with-mpfr             include MPFR support (auto/yes/no)
#   --with-libmpfr-prefix[=DIR]  search for libmpfr in DIR/include and DIR/lib
#   --without-libmpfr-prefix     don't search for libmpfr in includedir and libdir
#   --with-libmpfr-type=TYPE     type of library to search for (auto/static/shared)
#   --with-python[=PYTHON]  include python support
#                           (auto/yes/no/<python-program>)
#   --with-python-libdir[=DIR]
#                           search for python's libraries in DIR
#   --with-guile[=GUILE]    include guile support
#                           (auto/yes/no/<guile-version>/<pkg-config-program>)
#   --with-intel-pt         include Intel Processor Trace support (auto/yes/no)
#   --with-libipt-prefix[=DIR]  search for libipt in DIR/include and DIR/lib
#   --without-libipt-prefix     don't search for libipt in includedir and libdir
#   --with-libipt-type=TYPE     type of library to search for (auto/static/shared)
#   --with-sysroot[=DIR]    search for usr/lib et al within DIR
#   --with-system-gdbinit=PATH
#                           automatically load a system-wide gdbinit file
#   --with-system-gdbinit-dir=PATH
#                           automatically load system-wide gdbinit files from
#                           this directory
#   --with-lzma             support lzma compression (auto/yes/no)
#   --with-liblzma-prefix[=DIR]  search for liblzma in DIR/include and DIR/lib
#   --without-liblzma-prefix     don't search for liblzma in includedir and libdir
#   --with-liblzma-type=TYPE     type of library to search for (auto/static/shared)
#   --with-tcl              directory containing tcl configuration (tclConfig.sh)
#   --with-tk               directory containing tk configuration (tkConfig.sh)
#   --with-x                use the X Window System
#   --with-babeltrace       include babeltrace support (auto/yes/no)
#   --with-libbabeltrace-prefix[=DIR]  search for libbabeltrace in DIR/include and DIR/lib
#   --without-libbabeltrace-prefix     don't search for libbabeltrace in includedir and libdir
#   --with-libbabeltrace-type=TYPE     type of library to search for (auto/static/shared)
#   --with-xxhash           use libxxhash for hashing (faster) (auto/yes/no)
#   --with-libxxhash-prefix[=DIR]  search for libxxhash in DIR/include and DIR/lib
#   --without-libxxhash-prefix     don't search for libxxhash in includedir and libdir
#   --with-libxxhash-type=TYPE     type of library to search for (auto/static/shared)
# 
# Some influential environment variables:
#   CC          C compiler command
#   CFLAGS      C compiler flags
#   LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
#               nonstandard directory <lib dir>
#   LIBS        libraries to pass to the linker, e.g. -l<library>
#   CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
#               you have headers in a nonstandard directory <include dir>
#   CXX         C++ compiler command
#   CXXFLAGS    C++ compiler flags
#   CPP         C preprocessor
#   CXXCPP      C++ preprocessor
#   MAKEINFO    Parent configure detects if it is of sufficient version.
#   MAKEINFOFLAGS
#               Parameters for MAKEINFO.
#   PKG_CONFIG  path to pkg-config utility
#   PKG_CONFIG_PATH
#               directories to add to pkg-config's search path
#   PKG_CONFIG_LIBDIR
#               path overriding pkg-config's built-in search path
#   DEBUGINFOD_CFLAGS
#               C compiler flags for DEBUGINFOD, overriding pkg-config
#   DEBUGINFOD_LIBS
#               linker flags for DEBUGINFOD, overriding pkg-config
#   YACC        The `Yet Another Compiler Compiler' implementation to use.
#               Defaults to the first program found out of: `bison -y', `byacc',
#               `yacc'.
#   YFLAGS      The list of arguments that will be passed by default to $YACC.
#               This script will default YFLAGS to the empty string to avoid a
#               default value of `-d' given by some make applications.
#   ZSTD_CFLAGS C compiler flags for ZSTD, overriding pkg-config
#   ZSTD_LIBS   linker flags for ZSTD, overriding pkg-config
#   XMKMF       Path to xmkmf, Makefile generator for X Window System
# 
# Use these variables to override the choices made by `configure' or to help
# it to find libraries and programs with nonstandard names/locations.
# 
# Report bugs to the package provider.
# 

#--build=x86_64-linux-gnu\
#--host=x86_64-linux-gnu\

../../../src/gdb/configure \
--target=arm-rtems6\
--verbose\
--disable-nls\
--disable-gas\
--disable-binutils\
--disable-ld\
--disable-gold\
--disable-gprof\
--without-included-gettext\
--disable-win32-registry\
--disable-werror\
--enable-sim\
--without-zlib\
--with-expat\
--with-guile=no\
--with-python=/usr/bin/python3\
--prefix=/opt/rtems/6\
--bindir=/opt/rtems/6/bin\
--exec-prefix=/opt/rtems/6\
--includedir=/opt/rtems/6/include\
--libdir=/opt/rtems/6/lib\
--mandir=/opt/rtems/6/share/man\
--infodir=/opt/rtems/6/share/info
